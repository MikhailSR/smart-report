"""
–û—Å–Ω–æ–≤–Ω–∞—è –∑–∞–¥–∞—á–∞ —ç—Ç–æ–≥–æ —Ñ–∞–π–ª–∞ —Å—Ñ–æ—Ä–∏—Ä–æ–≤–∞—Ç—å —Ç–µ–∫—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª-–æ—Ç—á–µ—Ç, –ø–æ —à–∞–±–ª–æ–Ω—É. –í–Ω—É—Ç—Ä–∏ —Å–æ–¥–µ—Ä–∂–∏—Ç—å—Å—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å—É–º–º–∞—Ö,
–∫–æ–ª–∏—á–µ—Å—Ç–≤–µ –ø—Ä–æ–¥–∞–Ω–Ω—ã—Ö —É—Å–ª—É–≥, –æ–±–æ—Ä–æ—Ç–µ –∏ –¥—Ä—É–≥–∏—Ö –º–µ—Ç—Ä–∏–∫–∞—Ö, –∫–æ—Ç–æ—Ä—ã–µ —Ä–∞—Å—á–∏—Ç—ã–≤–∞—é—Ç—å—Å—è –Ω–∞ –æ—Å–Ω–æ–≤–µ csv —Ñ–∞–π–ª–∞. CSV —Ñ–∞–π–ª
–ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–æ –∏–º–ø–æ—Ä—Ç–∏—Ä—É–µ—Ç—Å—è –∏–∑ google sheet, –ø–æ –æ–¥–µ–ª—å–Ω–æ–º—É –º–µ—Å—è—Ü—É.

–í —ç—Ç–æ–º –º–æ–¥—É–ª–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∞ –±–∏–±–ª–∏–æ—Ç–µ–∫–∞ easygui –¥–ª—è —Å–æ–∑–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ –∏–Ω—Ç–µ—Ñ–µ–π—Å–∞. –ü—Ä–∏ —Ä–∞—Å—â–∏—Ä–µ–Ω–∏–∏ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–∞,
–æ–Ω–∞ –±—É–¥–µ—Ç –∑–∞–º–µ–Ω–µ–Ω–∞ –Ω–∞ Tkinter –∏–ª–∏ PyQt5.
"""

import csv
import pprint
import easygui
import datetime
import os
import sys


def generate_report_file(services: dict, path: str) -> int:
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç 1, –µ—Å–ª–∏ report-—Ñ–∞–π–ª –±—ã–ª —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω –∏ –∑–∞–∫—Ä—ã—Ç.
    –§–∞–π–ª —Ñ–æ—Ä–º–∏—Ä—É–µ—Ç—Å—è –≤ –∑–∞—Ä–∞–Ω–µ–µ –æ–≥–æ–≤–æ—Ä–µ–Ω–Ω–æ–º —Ñ–æ—Ä–º–∞—Ç–µ. –§–æ—Ä–º–∞—Ç –º–µ–Ω—è–µ—Ç—Å—è –ø–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏.

    Args:
        services (dict): —Å–ª–æ–≤–∞—Ä—å —Å –¥–∞–Ω–Ω—ã–º–∏ –¥–ª—è –∑–∞–ø–∏—Å–∏ –≤ –æ—Ç—á–µ—Ç-—Ñ–∞–π–ª.
        path (str): –ø—É—Ç—å –∫ .csv —Ñ–∞–π–ª—É, –Ω–∞ –æ—Å–Ω–æ–≤–µ –∫–æ—Ç–æ—Ä–æ–≥–æ –±—ã–ª —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω —Å–ª–æ–≤–∞—Ä—å services.

    Returns:
        1 (int): –≤ —Å–ª—É—á–∞–µ —É—Å–ø–µ—à–Ω–æ–≥–æ –∑–∞–∫—Ä—ã—Ç–∏—è —Ñ–∞–π–ª–∞
    """

    file_name: str = exstract_basename(path)
    file_result_name: str = datetime.datetime.now().strftime(f"report_%Y-%m-%d_%H-%M-%S_{file_name}.txt")
    home_directory: str = os.path.expanduser('~')
    directory_to_write: str = home_directory + r'\Desktop'
    result_file: str = fr"{directory_to_write}\{file_result_name}"

    with open(result_file, 'w', encoding='utf8') as file:
        revenue: float = round(sum(item[0] for item in services.values()), 2)
        file.write(f'–†–∞—Å—á–µ—Ç\n–û–±–æ—Ä–æ—Ç: {revenue}\n\n')

        poslina_and_perevod: float = round(
            sum(value[0] for key, value in services.items() if key in ('–ü–æ—à–ª–∏–Ω–∞', '–ü–µ—Ä–µ–≤–æ–¥')),
            2)
        file.write(f'üß°–ë–µ–∑ –ø–æ—à–ª–∏–Ω –∏ –ø–µ—Ä–µ–≤–æ–¥–æ–≤: {revenue - poslina_and_perevod}\n\n')

        sita: float = services.get('–°–∏—Ç–∞')[0]
        spravka: float = services.get('–°–ø—Ä–∞–≤–∫–∞')[0]
        obmen_prav: float = services.get('–ü–æ–¥ –∫–ª—é—á –ø—Ä–∞–≤–∞ –æ–±–º–µ–Ω')[0]
        file.write(
            f'ü©µ–ë–µ–∑ –ø–æ—à–ª–∏–Ω, –ø–µ—Ä–µ–≤–æ–¥–æ–≤, —Å–∏—Ç, —Å–ø—Ä–∞–≤–æ–∫ –∏ –æ–±–º–µ–Ω–∞ –ø—Ä–∞–≤: {revenue - poslina_and_perevod - sita - spravka - obmen_prav}\n\n')

        file.write(
            f'üíö–ë–µ–∑ –ø–æ—à–ª–∏–Ω, –ø–µ—Ä–µ–≤–æ–¥–æ–≤, —Å–∏—Ç, —Å–ø—Ä–∞–≤–æ–∫, —Å –æ–±–º–µ–Ω–æ–º –ø—Ä–∞–≤: {revenue - poslina_and_perevod - sita - spravka}\n\n')

        for service, value in services.items():
            number_sales_service: int = value[1]
            if number_sales_service == 0:
                continue
            sums: str = ' + '.join(value[2])
            file.write(f'{service}\n{value[1]} —à—Ç: {sums}\nüí∞–°—É–º–º–∞ {value[0]}\n\n')

    return 1


def process_service_data(path_file: str) -> dict[str:list[float, int, list]]:
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Å–ª–æ–≤–∞—Ä—å —É—Å–ª—É–≥. –ó–Ω–∞—á–µ–Ω–∏—è —Å–ª–æ–≤–∞—Ä—è –≤ —Ç–∞–∫–æ–º —Ñ–æ—Ä–º–∞—Ç–µ (—Å—É–º–º–∞_–æ–±—â–∞—è: float, –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ:int,
    —Å—É–º–º—ã_–æ—Ç–¥–µ–ª—å–Ω–æ: list[str]).

    Args:
        path_file (str): –ø—É—Ç—å –∫ .cvs —Ñ–∞–π–ª—É –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞.
        –§–∞–π–ª –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –≤ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–º–º —Ñ–æ—Ä–º–µ—Ç–µ –î–∞—Ç–∞, –°—É–º–º–∞, –£—Å–ª—É–≥–∞ –∏ —Ç.–¥.

    Returns:
        dict: –∑–∞–ø–æ–ª–Ω–µ–Ω–Ω—ã–π —Å–ª–æ–≤–∞—Ä—å, –≤ —Ñ–æ—Ä–º–∞—Ç–µ —É—Å–ª—É–≥–∞: [—Å—É–º–º–∞_–æ–±—â–∞—è, –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ, —Å—É–º–º—ã_–æ—Ç–¥–µ–ª—å–Ω–æ].
    """

    services: dict[str:list[float, int, list]] = {'–ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è': [0, 0, []],
                                                  '–ë–∞–∫–∞–ª–∞–≤—Ä': [0, 0, []],
                                                  '–ú–∞–≥–∏—Å—Ç—Ä–∞—Ç—É—Ä–∞': [0, 0, []],
                                                  'NIE': [0, 0, []],
                                                  '–î–æ–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å': [0, 0, []],
                                                  '–§–û–ü/–∞–≤—Ç–æ–Ω–æ–º–æ': [0, 0, []],
                                                  '–®–∫–æ–ª–∞ –∏—Å–ø–∞–Ω—Å–∫–æ–≥–æ': [0, 0, []],
                                                  '–û–º–æ–ª–æ–≥–∞—Ü–∏—è –∞—Ç—Ç–µ—Å—Ç–∞—Ç–∞': [0, 0, []],
                                                  '–û–º–æ–ª–æ–≥–∞—Ü–∏—è –¥–∏–ø–ª–æ–º–∞': [0, 0, []],
                                                  '–í–ó1': [0, 0, []],
                                                  '–ü–æ–¥ –∫–ª—é—á –ø—Ä–∞–≤–∞ –æ–±–º–µ–Ω': [0, 0, []],
                                                  '–°–∏—Ç–∞': [0, 0, []],
                                                  '–ü—Ä–æ–¥–ª–µ–Ω–∏–µ —Å—Ç—É–¥ –≤–∏–∑—ã': [0, 0, []],
                                                  '–Ø–∑—ã–∫–æ–≤–∞—è —à–∫–æ–ª–∞': [0, 0, []],
                                                  '–ü–æ—à–ª–∏–Ω–∞': [0, 0, []],
                                                  '–ü–µ—Ä–µ–≤–æ–¥': [0, 0, []],
                                                  '–°–ø—Ä–∞–≤–∫–∞': [0, 0, []],
                                                  '–î—Ä—É–≥–∞—è —É—Å–ª—É–≥–∞': [0, 0, []]}

    with open(path_file, encoding='utf-8') as file:
        reader = csv.reader(file)
        headers = next(reader)

        # –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ —Å–ª–æ–≤–∞—Ä—è
        for row in reader:
            service: str = row[3]
            if service == '' or service.isdigit():
                continue

            summa: str = normalize_number(row[1])
            # —Å—É–º–º–∞
            services[service][0] += float(summa)
            # –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ
            services[service][1] += 1
            # —Å—É–º–º—ã_–æ—Ç–¥–µ–ª—å–Ω–æ
            services[service][2].append(summa)

    return services


def exstract_basename(path: str) -> str:
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∏–º—è —Ñ–∞–π–ª–∞, –∏–∑–≤–ª–µ—á–µ–Ω–Ω–æ–µ –∏–∑ –ø—É—Ç–∏ –∫ –Ω–µ–º—É.

    Args:
        path (str): –ø—É—Ç—å –∫ —Ñ–∞–π–ª—É.

    Returns:
        str: –∏–∑–≤–ª–µ—á–µ–Ω–Ω–æ–µ –∏–º—è —Ñ–∞–π–ª–∞
    """

    return os.path.basename(path)


def normalize_number(number: str) -> str:
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Ç—Ä–æ–∫—É —Å —á–∏—Å–ª–æ–º, –ø—Ä–∏–≤–µ–¥–µ–Ω–Ω—ã–º –∫ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º—É –≤–∏–¥—É. –ó–∞–ø—è—Ç–∞—è –∑–∞–º–µ–Ω—è–µ—Ç—Å—è –Ω–∞ —Ç–æ—á–∫—É,
    –Ω–∞—á–∞–ª—å–Ω—ã–µ –∏ –∫–æ–Ω—É—á–Ω—ã–µ –ø—Ä–æ–±–µ–ª—ã —É–¥–∞–ª—è—é—Ç—Å—è.

    Args:
        number (str): —á–∏—Å–ª–æ –¥–ª—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è.

    Returns:
        str: –∏–æ—Ç–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ —á–∏—Å–ª–æ"""

    number = number.strip()
    number = number.replace(',', '.')
    return number


def is_csv_file(path: str) -> bool:
    """
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç True, –µ—Å–ª–∏ —Ñ–∞–π–ª –ø–æ —É–∫–∞–∑–∞–Ω–Ω–æ–º—É –ø—É—Ç–∏ –∏–º–µ–µ—Ç —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ .csv –∏ False –≤ –∏–Ω–æ–º —Å–ª—É—á–∞–µ. –ï—Å–ª–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä path
    –ø—É—Å—Ç–æ–π, –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç False.
    Args:
        path (str): –ø—É—Ç—å –∫ —Ñ–∞–π–ª—É —Å –∫–æ–Ω–µ—á–Ω—ã–º –∏–º–µ–Ω–µ–º –∏ —Ç–∏–ø–æ–º —Ñ–∞–π–ª–∞.

    Returns:
        bool: True - –≤–∞–ª–∏–¥–Ω—ã–π —Ç–∏–ø. False - –Ω–µ –≤–∞–ª–∏–¥–Ω—ã–π —Ç–∏–ø.
    """
    if not path:
        return False

    filename, file_extension = os.path.splitext(path)
    if file_extension == '.csv':
        return True
    return False


def main():
    button: str = easygui.buttonbox('–í—ã–±–µ—Ä–∏—Ç–µ .csv —Ñ–∞–π–ª.\n–ü—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–æ –µ–≥–æ –Ω—É–∂–Ω–æ –∏—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –∏–∑ Google Sheet.',
                                    title='–§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç—á–µ—Ç–∞ –∑–∞ –º–µ—Å—è—Ü', choices=['–í—ã–±—Ä–∞—Ç—å —Ñ–∞–π–ª', '–ó–∞–∫—Ä—ã—Ç—å'])
    if button is None:
        sys.exit()
    if button == '–ó–∞–∫—Ä—ã—Ç—å':
        sys.exit()

    path: str = easygui.fileopenbox()
    while not is_csv_file(path):
        easygui.msgbox(title='–û—à–∏–±–∫–∞', msg='–í—ã–±—Ä–∞–Ω –Ω–µ–≤–µ—Ä–Ω—ã–π —Ñ–∞–π–ª! –° —Ç–∏–ø–æ–º –ù–ï .csv\n–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑!')
        button = easygui.buttonbox('–í—ã–±–µ—Ä–∏—Ç–µ .csv —Ñ–∞–π–ª.\n–ü—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–æ –µ–≥–æ –Ω—É–∂–Ω–æ –∏—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –∏–∑ Google Sheet.',
                                   title='–§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç—á–µ—Ç–∞ –∑–∞ –º–µ—Å—è—Ü', choices=['–í—ã–±—Ä–∞—Ç—å —Ñ–∞–π–ª', '–ó–∞–∫—Ä—ã—Ç—å'])
        if button is None:
            sys.exit()
        if button == '–ó–∞–∫—Ä—ã—Ç—å':
            sys.exit()
        path = easygui.fileopenbox()

    services: dict = process_service_data(path)
    if generate_report_file(services, path):
        easygui.msgbox('–û—Ç—á–µ—Ç –≥–æ—Ç–æ–≤! –Ω–∞—Ö–æ–¥–∏—Ç—å—Å—è –Ω–∞ —Ä–∞–±–æ—á–µ–º —Å—Ç–æ–ª–µ')

    pprint.pprint(services)


if __name__ == '__main__':
    main()
